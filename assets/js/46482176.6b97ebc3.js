"use strict";(self.webpackChunktinasaurus_blog=self.webpackChunktinasaurus_blog||[]).push([[2208],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>d});var a=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function s(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,o=function(t,e){if(null==t)return{};var n,a,o={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var u=a.createContext({}),l=function(t){var e=a.useContext(u),n=e;return t&&(n="function"==typeof t?t(e):s(s({},e),t)),n},c=function(t){var e=l(t.components);return a.createElement(u.Provider,{value:e},t.children)},p="mdxType",h={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var n=t.components,o=t.mdxType,r=t.originalType,u=t.parentName,c=i(t,["components","mdxType","originalType","parentName"]),p=l(n),m=o,d=p["".concat(u,".").concat(m)]||p[m]||h[m]||r;return n?a.createElement(d,s(s({ref:e},c),{},{components:n})):a.createElement(d,s({ref:e},c))}));function d(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var r=n.length,s=new Array(r);s[0]=m;var i={};for(var u in e)hasOwnProperty.call(e,u)&&(i[u]=e[u]);i.originalType=t,i[p]="string"==typeof t?t:o,s[1]=i;for(var l=2;l<r;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5135:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>u,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(7462),o=(n(7294),n(3905));const r={title:"Hosting a blog with Tina CMS and Docusaurus",authors:[{name:"Markus Ahlstrand"}],date:"2023-08-02",tags:["docusaurus","tinacms","cms","open source"]},s=void 0,i={permalink:"/tinasaurus-blog/blog/Hosting-a-blog-with-Tina-CMS-and-Docusaurus",editUrl:"https://tinasaurus.vercel.app/admin#/collections/post/blog/Hosting-a-blog-with-Tina-CMS-and-Docusaurus.mdx",source:"@site/blog/Hosting-a-blog-with-Tina-CMS-and-Docusaurus.mdx",title:"Hosting a blog with Tina CMS and Docusaurus",description:"This will be rewritten by chatGPT:",date:"2023-08-02T00:00:00.000Z",formattedDate:"August 2, 2023",tags:[{label:"docusaurus",permalink:"/tinasaurus-blog/blog/tags/docusaurus"},{label:"tinacms",permalink:"/tinasaurus-blog/blog/tags/tinacms"},{label:"cms",permalink:"/tinasaurus-blog/blog/tags/cms"},{label:"open source",permalink:"/tinasaurus-blog/blog/tags/open-source"}],readingTime:2.82,hasTruncateMarker:!1,authors:[{name:"Markus Ahlstrand"}],frontMatter:{title:"Hosting a blog with Tina CMS and Docusaurus",authors:[{name:"Markus Ahlstrand"}],date:"2023-08-02",tags:["docusaurus","tinacms","cms","open source"]},prevItem:{title:"Welcome",permalink:"/tinasaurus-blog/blog/welcome"},nextItem:{title:"MDX Blog Post",permalink:"/tinasaurus-blog/blog/mdx-blog-post"}},u={authorsImageUrls:[void 0]},l=[],c={toc:l};function p(t){let{components:e,...n}=t;return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This will be rewritten by chatGPT:"),(0,o.kt)("p",null,"\\\nI like to use open source software that makes it possible to host things where and how I want without any lock in. Typically the downside with this is that you need to invest a lot more time to get a worse product than you would get for free if you use any of the available platform."),(0,o.kt)("p",null,"But with combining a couple of services I think I finally have found a solution that will work for me:\\\n","-"," Docusaurus. This is a really awesome solution for static generated content with a large ecosystem. It's primarily used of documentation websites but works just fine for blogs as well. The downside with Docusaurus is that you need to add the content as markdown files and commit them to git which isn't the fast workflow you would want if you just want to do a quick post. Which leads us to the next puzzle piece"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Tina CMS. Tina is a markdown editor that integrates into other CMS and commits and changes to git. This takes away all the friction with doing the updates."),(0,o.kt)("li",{parentName:"ul"},"Github pages. I haven't used github pages in the past but it seems to be the most simple solution as I manage the source code on Github and use Github actions to automate the static generation of the website.")),(0,o.kt)("p",null,"How to set it up."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Get it running locally")),(0,o.kt)("p",null,"First for the repo from the Tina Docusaurus repo in Github: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/tinacms/tinasaurus"},"https://github.com/tinacms/tinasaurus")),(0,o.kt)("p",null,"This way you can always pull down any improvements that they do to the repo later on."),(0,o.kt)("p",null,"Start the project locally by running: yarn tina and open ",(0,o.kt)("a",{parentName:"p",href:"http://localhost:3000/admin"},"http://localhost:3000/admin")," in a browser."),(0,o.kt)("p",null,"GitHub Pages Configuration"),(0,o.kt)("p",null,"Configure your docusaurus.config.js to deploy to GitHub Pages. Modify the fields url, baseUrl, and organizationName and projectName under presets.docusaurus-plugin-content-docs as per your project."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"module.exports = {\n  url: 'https://<GITHUB_USERNAME>.github.io',\n  baseUrl: '/<REPO_NAME>/',\n  projectName: '<REPO_NAME>',\n  organizationName: '<GITHUB_USERNAME>',\n  // ...\n  presets: [\n    [\n      '@docusaurus/preset-classic',\n      {\n        docs: {\n          sidebarPath: require.resolve('./sidebars.js'),\n          routeBasePath: '/',\n          editUrl:\n            'https://github.com/<GITHUB_USERNAME>/<REPO_NAME>/edit/main/',\n        },\n        theme: {\n          customCss: require.resolve('./src/css/custom.css'),\n        },\n      },\n    ],\n  ],\n};\n\n")),(0,o.kt)("p",null,"Setup GitHub Actions"),(0,o.kt)("p",null,"In your project root, create a new directory named .github/workflows and inside this, create a new file deploy.yml. This is the GitHub Actions configuration file."),(0,o.kt)("p",null,"Put the following content in the deploy.yml file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"name: Deployment\n\non:\npush:\nbranches:\n- main  # Set a branch to deploy\n\njobs:\ndeploy:\nruns - on: ubuntu - latest\n\nsteps:\n- uses: actions / checkout@v2\n\n- name: Setup Node\nuses: actions / setup - node@v2\nwith:\nnode - version: '14'\n\n  - name: Install Dependencies\nrun: npm ci\n\n  - name: Build\nrun: npm run build\n\n  - name: Deploy\nuses: peaceiris / actions - gh - pages@v3\nwith:\ngithub_token: ${ { secrets.GITHUB_TOKEN } }\npublish_dir: ./ build\n\n")),(0,o.kt)("p",null,"Commit and Push"),(0,o.kt)("p",null,"Commit all your changes and push to the main branch."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'git add.\ngit commit - m "Setup GitHub Actions for Docusaurus"\ngit push\n\n')),(0,o.kt)("p",null,"Activate GitHub Pages"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Go to your repository settings on GitHub, scroll down to the GitHub Pages section, select gh-pages branch as your source, and save.")),(0,o.kt)("p",null,'After you have pushed your changes to the repository, GitHub Actions should start a new job to deploy your Docusaurus site to GitHub Pages. You can check the status of the job in the "Actions" tab of your repository. After the deployment, you can access your site at https://\\<GITHUB',"_","USERNAME>.github.io/\\<REPO","_","NAME>/."))}p.isMDXComponent=!0}}]);